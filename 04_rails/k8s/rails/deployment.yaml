apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-deployment
  labels:
    app: rails
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rails
  template:
    metadata:
      labels:
        app: rails
    spec:
      containers:
      - name: app
        image: yhirano55/spa
        command: ["bundle", "exec", "puma", "-C", "config/puma.rb"]
        lifecycle:
          postStart:
            exec:
              command: ["cp", "-r", "/spa/public", "/nginx/"]
        env:
        - name: RAILS_ENV
          value: production
        - name: RACK_ENV
          value: deployment
        - name: RAILS_MASTER_KEY
          valueFrom: 
            secretKeyRef:
              name: rails-secret
              key: RAILS_MASTER_KEY
        - name: RAILS_LOG_TO_STDOUT
          value: "true"
        - name: DATABASE_HOST
          value: db-service.default.svc.cluster.local
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: static-files
          mountPath: /nginx/public
        livenessProbe:
          httpGet:
            port: 3000
      - name: web
        image: nginx:1.11.5-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: static-files
          mountPath: /app/public
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
          readOnly: true
      volumes:
      - name: static-files
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: rails-nginx-config
